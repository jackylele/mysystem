<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authorizingRealmImpl" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>
	<!-- 凭证匹配器 -->
	<!--<bean id="credentialsMatcher" class="com.sy.security.RetryLimitHashedCredentialsMatcher">-->
		<!--<property name="hashAlgorithmName" value="md5"/>-->
		<!--<property name="hashIterations" value="2"/>-->
		<!--<property name="storedCredentialsHexEncoded" value="true"/>-->
	<!--</bean>-->

	<!-- 項目自定义的Realm -->
	<bean id="authorizingRealmImpl" class="com.sy.security.AuthorizingRealmImpl" />

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/user/login" />
		<property name="successUrl" value="/index" />
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置允许匿名访问 -->
				/css/** = anon
				/html/** = anon
				/static/** = anon
				/temp/** = anon
				/js/** = anon
				<!-- 可匿名访问路径，例如：短信验证码、登录连接、退出连接等 -->
				/user/checkLogin = anon
				/user/login = anon
				/user/register = anon
				/user/registeruser = anon
				/basedata/** = anon
				/api/** = anon
				<!--/user/sendCode = anon-->
				/login = authc
				/logout = logout
				<!-- 剩余其他路径，必须认证通过才可以访问 -->
				/** = authc
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
</beans>